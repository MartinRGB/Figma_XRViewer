import type { ComponentProps, ComponentType, Ref, RefAttributes } from 'react';
import React from 'react';
import type { fSrcObject } from './editableFactoryConfigUtils';
import type { $FixMe } from '../types';
declare const editable: (<T extends ComponentType<any> | keyof JSX.IntrinsicElements, U extends "line" | "mesh" | "lineSegments" | "lineLoop" | "points" | "group" | "perspectiveCamera" | "orthographicCamera" | "meshStandardMaterial" | "spotLight" | "pointLight" | "hemisphereLight" | "directionalLight" | "ambientLight" | "fog">(Component: T, type: T extends "primitive" ? null : U) => React.ForwardRefExoticComponent<React.PropsWithoutRef<Omit<ComponentProps<T>, "visible"> & {
    theatreKey: string;
    visible?: boolean | "editor" | undefined;
    additionalProps?: $FixMe;
    objRef?: $FixMe;
} & (T extends "primitive" ? {
    editableType: U;
} : {}) & RefAttributes<JSX.IntrinsicElements[U]>> & RefAttributes<unknown>>) & {
    line: React.ForwardRefExoticComponent<Omit<React.SVGProps<SVGLineElement>, "visible"> & {
        theatreKey: string;
        visible?: boolean | "editor" | undefined;
        additionalProps?: $FixMe;
        objRef?: $FixMe;
        ref?: Ref<unknown> | undefined;
        mapSrc?: fSrcObject | undefined;
        alphaMapSrc?: fSrcObject | undefined;
        aoMapSrc?: fSrcObject | undefined;
        bumpMapSrc?: fSrcObject | undefined;
        displacementMapSrc?: fSrcObject | undefined;
        emissiveMapSrc?: fSrcObject | undefined;
        envMapSrc?: fSrcObject | undefined;
        lightMapSrc?: fSrcObject | undefined;
        metalnessMapSrc?: fSrcObject | undefined;
        normalMapSrc?: fSrcObject | undefined;
        roughnessMapSrc?: fSrcObject | undefined;
    }>;
    mesh: React.ForwardRefExoticComponent<Omit<import("@react-three/fiber").MeshProps, "visible"> & {
        theatreKey: string;
        visible?: boolean | "editor" | undefined;
        additionalProps?: $FixMe;
        objRef?: $FixMe;
        ref?: Ref<unknown> | undefined;
        mapSrc?: fSrcObject | undefined;
        alphaMapSrc?: fSrcObject | undefined;
        aoMapSrc?: fSrcObject | undefined;
        bumpMapSrc?: fSrcObject | undefined;
        displacementMapSrc?: fSrcObject | undefined;
        emissiveMapSrc?: fSrcObject | undefined;
        envMapSrc?: fSrcObject | undefined;
        lightMapSrc?: fSrcObject | undefined;
        metalnessMapSrc?: fSrcObject | undefined;
        normalMapSrc?: fSrcObject | undefined;
        roughnessMapSrc?: fSrcObject | undefined;
    }>;
    lineSegments: React.ForwardRefExoticComponent<Omit<import("@react-three/fiber").LineSegmentsProps, "visible"> & {
        theatreKey: string;
        visible?: boolean | "editor" | undefined;
        additionalProps?: $FixMe;
        objRef?: $FixMe;
        ref?: Ref<unknown> | undefined;
        mapSrc?: fSrcObject | undefined;
        alphaMapSrc?: fSrcObject | undefined;
        aoMapSrc?: fSrcObject | undefined;
        bumpMapSrc?: fSrcObject | undefined;
        displacementMapSrc?: fSrcObject | undefined;
        emissiveMapSrc?: fSrcObject | undefined;
        envMapSrc?: fSrcObject | undefined;
        lightMapSrc?: fSrcObject | undefined;
        metalnessMapSrc?: fSrcObject | undefined;
        normalMapSrc?: fSrcObject | undefined;
        roughnessMapSrc?: fSrcObject | undefined;
    }>;
    lineLoop: React.ForwardRefExoticComponent<Omit<import("@react-three/fiber").LineLoopProps, "visible"> & {
        theatreKey: string;
        visible?: boolean | "editor" | undefined;
        additionalProps?: $FixMe;
        objRef?: $FixMe;
        ref?: Ref<unknown> | undefined;
        mapSrc?: fSrcObject | undefined;
        alphaMapSrc?: fSrcObject | undefined;
        aoMapSrc?: fSrcObject | undefined;
        bumpMapSrc?: fSrcObject | undefined;
        displacementMapSrc?: fSrcObject | undefined;
        emissiveMapSrc?: fSrcObject | undefined;
        envMapSrc?: fSrcObject | undefined;
        lightMapSrc?: fSrcObject | undefined;
        metalnessMapSrc?: fSrcObject | undefined;
        normalMapSrc?: fSrcObject | undefined;
        roughnessMapSrc?: fSrcObject | undefined;
    }>;
    points: React.ForwardRefExoticComponent<Omit<import("@react-three/fiber").PointsProps, "visible"> & {
        theatreKey: string;
        visible?: boolean | "editor" | undefined;
        additionalProps?: $FixMe;
        objRef?: $FixMe;
        ref?: Ref<unknown> | undefined;
        mapSrc?: fSrcObject | undefined;
        alphaMapSrc?: fSrcObject | undefined;
        aoMapSrc?: fSrcObject | undefined;
        bumpMapSrc?: fSrcObject | undefined;
        displacementMapSrc?: fSrcObject | undefined;
        emissiveMapSrc?: fSrcObject | undefined;
        envMapSrc?: fSrcObject | undefined;
        lightMapSrc?: fSrcObject | undefined;
        metalnessMapSrc?: fSrcObject | undefined;
        normalMapSrc?: fSrcObject | undefined;
        roughnessMapSrc?: fSrcObject | undefined;
    }>;
    group: React.ForwardRefExoticComponent<Omit<import("@react-three/fiber").GroupProps, "visible"> & {
        theatreKey: string;
        visible?: boolean | "editor" | undefined;
        additionalProps?: $FixMe;
        objRef?: $FixMe;
        ref?: Ref<unknown> | undefined;
        mapSrc?: fSrcObject | undefined;
        alphaMapSrc?: fSrcObject | undefined;
        aoMapSrc?: fSrcObject | undefined;
        bumpMapSrc?: fSrcObject | undefined;
        displacementMapSrc?: fSrcObject | undefined;
        emissiveMapSrc?: fSrcObject | undefined;
        envMapSrc?: fSrcObject | undefined;
        lightMapSrc?: fSrcObject | undefined;
        metalnessMapSrc?: fSrcObject | undefined;
        normalMapSrc?: fSrcObject | undefined;
        roughnessMapSrc?: fSrcObject | undefined;
    }>;
    perspectiveCamera: React.ForwardRefExoticComponent<Omit<import("@react-three/fiber").PerspectiveCameraProps, "visible"> & {
        theatreKey: string;
        visible?: boolean | "editor" | undefined;
        additionalProps?: $FixMe;
        objRef?: $FixMe;
        ref?: Ref<unknown> | undefined;
        mapSrc?: fSrcObject | undefined;
        alphaMapSrc?: fSrcObject | undefined;
        aoMapSrc?: fSrcObject | undefined;
        bumpMapSrc?: fSrcObject | undefined;
        displacementMapSrc?: fSrcObject | undefined;
        emissiveMapSrc?: fSrcObject | undefined;
        envMapSrc?: fSrcObject | undefined;
        lightMapSrc?: fSrcObject | undefined;
        metalnessMapSrc?: fSrcObject | undefined;
        normalMapSrc?: fSrcObject | undefined;
        roughnessMapSrc?: fSrcObject | undefined;
    }>;
    orthographicCamera: React.ForwardRefExoticComponent<Omit<import("@react-three/fiber").OrthographicCameraProps, "visible"> & {
        theatreKey: string;
        visible?: boolean | "editor" | undefined;
        additionalProps?: $FixMe;
        objRef?: $FixMe;
        ref?: Ref<unknown> | undefined;
        mapSrc?: fSrcObject | undefined;
        alphaMapSrc?: fSrcObject | undefined;
        aoMapSrc?: fSrcObject | undefined;
        bumpMapSrc?: fSrcObject | undefined;
        displacementMapSrc?: fSrcObject | undefined;
        emissiveMapSrc?: fSrcObject | undefined;
        envMapSrc?: fSrcObject | undefined;
        lightMapSrc?: fSrcObject | undefined;
        metalnessMapSrc?: fSrcObject | undefined;
        normalMapSrc?: fSrcObject | undefined;
        roughnessMapSrc?: fSrcObject | undefined;
    }>;
    meshStandardMaterial: React.ForwardRefExoticComponent<Omit<import("@react-three/fiber").MeshStandardMaterialProps, "visible"> & {
        theatreKey: string;
        visible?: boolean | "editor" | undefined;
        additionalProps?: $FixMe;
        objRef?: $FixMe;
        ref?: Ref<unknown> | undefined;
        mapSrc?: fSrcObject | undefined;
        alphaMapSrc?: fSrcObject | undefined;
        aoMapSrc?: fSrcObject | undefined;
        bumpMapSrc?: fSrcObject | undefined;
        displacementMapSrc?: fSrcObject | undefined;
        emissiveMapSrc?: fSrcObject | undefined;
        envMapSrc?: fSrcObject | undefined;
        lightMapSrc?: fSrcObject | undefined;
        metalnessMapSrc?: fSrcObject | undefined;
        normalMapSrc?: fSrcObject | undefined;
        roughnessMapSrc?: fSrcObject | undefined;
    }>;
    spotLight: React.ForwardRefExoticComponent<Omit<import("@react-three/fiber").SpotLightProps, "visible"> & {
        theatreKey: string;
        visible?: boolean | "editor" | undefined;
        additionalProps?: $FixMe;
        objRef?: $FixMe;
        ref?: Ref<unknown> | undefined;
        mapSrc?: fSrcObject | undefined;
        alphaMapSrc?: fSrcObject | undefined;
        aoMapSrc?: fSrcObject | undefined;
        bumpMapSrc?: fSrcObject | undefined;
        displacementMapSrc?: fSrcObject | undefined;
        emissiveMapSrc?: fSrcObject | undefined;
        envMapSrc?: fSrcObject | undefined;
        lightMapSrc?: fSrcObject | undefined;
        metalnessMapSrc?: fSrcObject | undefined;
        normalMapSrc?: fSrcObject | undefined;
        roughnessMapSrc?: fSrcObject | undefined;
    }>;
    pointLight: React.ForwardRefExoticComponent<Omit<import("@react-three/fiber").PointLightProps, "visible"> & {
        theatreKey: string;
        visible?: boolean | "editor" | undefined;
        additionalProps?: $FixMe;
        objRef?: $FixMe;
        ref?: Ref<unknown> | undefined;
        mapSrc?: fSrcObject | undefined;
        alphaMapSrc?: fSrcObject | undefined;
        aoMapSrc?: fSrcObject | undefined;
        bumpMapSrc?: fSrcObject | undefined;
        displacementMapSrc?: fSrcObject | undefined;
        emissiveMapSrc?: fSrcObject | undefined;
        envMapSrc?: fSrcObject | undefined;
        lightMapSrc?: fSrcObject | undefined;
        metalnessMapSrc?: fSrcObject | undefined;
        normalMapSrc?: fSrcObject | undefined;
        roughnessMapSrc?: fSrcObject | undefined;
    }>;
    hemisphereLight: React.ForwardRefExoticComponent<Omit<import("@react-three/fiber").HemisphereLightProps, "visible"> & {
        theatreKey: string;
        visible?: boolean | "editor" | undefined;
        additionalProps?: $FixMe;
        objRef?: $FixMe;
        ref?: Ref<unknown> | undefined;
        mapSrc?: fSrcObject | undefined;
        alphaMapSrc?: fSrcObject | undefined;
        aoMapSrc?: fSrcObject | undefined;
        bumpMapSrc?: fSrcObject | undefined;
        displacementMapSrc?: fSrcObject | undefined;
        emissiveMapSrc?: fSrcObject | undefined;
        envMapSrc?: fSrcObject | undefined;
        lightMapSrc?: fSrcObject | undefined;
        metalnessMapSrc?: fSrcObject | undefined;
        normalMapSrc?: fSrcObject | undefined;
        roughnessMapSrc?: fSrcObject | undefined;
    }>;
    directionalLight: React.ForwardRefExoticComponent<Omit<import("@react-three/fiber").DirectionalLightProps, "visible"> & {
        theatreKey: string;
        visible?: boolean | "editor" | undefined;
        additionalProps?: $FixMe;
        objRef?: $FixMe;
        ref?: Ref<unknown> | undefined;
        mapSrc?: fSrcObject | undefined;
        alphaMapSrc?: fSrcObject | undefined;
        aoMapSrc?: fSrcObject | undefined;
        bumpMapSrc?: fSrcObject | undefined;
        displacementMapSrc?: fSrcObject | undefined;
        emissiveMapSrc?: fSrcObject | undefined;
        envMapSrc?: fSrcObject | undefined;
        lightMapSrc?: fSrcObject | undefined;
        metalnessMapSrc?: fSrcObject | undefined;
        normalMapSrc?: fSrcObject | undefined;
        roughnessMapSrc?: fSrcObject | undefined;
    }>;
    ambientLight: React.ForwardRefExoticComponent<Omit<import("@react-three/fiber").AmbientLightProps, "visible"> & {
        theatreKey: string;
        visible?: boolean | "editor" | undefined;
        additionalProps?: $FixMe;
        objRef?: $FixMe;
        ref?: Ref<unknown> | undefined;
        mapSrc?: fSrcObject | undefined;
        alphaMapSrc?: fSrcObject | undefined;
        aoMapSrc?: fSrcObject | undefined;
        bumpMapSrc?: fSrcObject | undefined;
        displacementMapSrc?: fSrcObject | undefined;
        emissiveMapSrc?: fSrcObject | undefined;
        envMapSrc?: fSrcObject | undefined;
        lightMapSrc?: fSrcObject | undefined;
        metalnessMapSrc?: fSrcObject | undefined;
        normalMapSrc?: fSrcObject | undefined;
        roughnessMapSrc?: fSrcObject | undefined;
    }>;
    fog: React.ForwardRefExoticComponent<Omit<import("@react-three/fiber").FogProps, "visible"> & {
        theatreKey: string;
        visible?: boolean | "editor" | undefined;
        additionalProps?: $FixMe;
        objRef?: $FixMe;
        ref?: Ref<unknown> | undefined;
        mapSrc?: fSrcObject | undefined;
        alphaMapSrc?: fSrcObject | undefined;
        aoMapSrc?: fSrcObject | undefined;
        bumpMapSrc?: fSrcObject | undefined;
        displacementMapSrc?: fSrcObject | undefined;
        emissiveMapSrc?: fSrcObject | undefined;
        envMapSrc?: fSrcObject | undefined;
        lightMapSrc?: fSrcObject | undefined;
        metalnessMapSrc?: fSrcObject | undefined;
        normalMapSrc?: fSrcObject | undefined;
        roughnessMapSrc?: fSrcObject | undefined;
    }>;
} & {
    primitive: React.ForwardRefExoticComponent<{
        object: any;
        theatreKey: string;
        visible?: boolean | "editor" | undefined;
        additionalProps?: $FixMe;
        objRef?: $FixMe;
        editableType: keyof JSX.IntrinsicElements;
        ref?: Ref<unknown> | undefined;
    } & {
        [props: string]: any;
    }>;
};
export default editable;
//# sourceMappingURL=editable.d.ts.map